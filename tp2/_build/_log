### Starting build.
# Target: main.ml.depends, tags: { extension:ml, file:main.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules main.ml > main.ml.depends # cached
# Target: engine.mli.depends, tags: { extension:mli, file:engine.mli, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules engine.mli > engine.mli.depends # cached
# Target: grammar.mli.depends, tags: { extension:mli, file:grammar.mli, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules grammar.mli > grammar.mli.depends # cached
# Target: grammar.cmi, tags: { byte, compile, extension:mli, file:grammar.mli, interf, ocaml, quiet }
/usr/bin/ocamlc -c -annot -g -o grammar.cmi grammar.mli # cached
# Target: engine.cmi, tags: { byte, compile, extension:mli, file:engine.mli, interf, ocaml, quiet }
/usr/bin/ocamlc -c -annot -g -o engine.cmi engine.mli # cached
# Target: equation.mli.depends, tags: { extension:mli, file:equation.mli, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules equation.mli > equation.mli.depends # cached
# Target: equation.cmi, tags: { byte, compile, extension:mli, file:equation.mli, interf, ocaml, quiet }
/usr/bin/ocamlc -c -annot -g -o equation.cmi equation.mli # cached
# Target: lL1.mli.depends, tags: { extension:mli, file:lL1.mli, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules lL1.mli > lL1.mli.depends # cached
# Target: lL1.cmi, tags: { byte, compile, extension:mli, file:lL1.mli, interf, ocaml, quiet }
/usr/bin/ocamlc -c -annot -g -o lL1.cmi lL1.mli # cached
# Target: main.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:main.cmo, file:main.ml, implem, ocaml, quiet }
/usr/bin/ocamlc -c -annot -g -o main.cmo main.ml # cached
# Target: engine.ml.depends, tags: { extension:ml, file:engine.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules engine.ml > engine.ml.depends # cached
# Target: grammar.ml.depends, tags: { extension:ml, file:grammar.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules grammar.ml > grammar.ml.depends # cached
# Target: grammarLexer.mll, tags: { extension:mll, file:grammarLexer.mll, lexer, ocaml, ocamllex, quiet }
/usr/bin/ocamllex -q grammarLexer.mll # cached
# Target: grammarLexer.ml.depends, tags: { extension:ml, file:grammarLexer.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules grammarLexer.ml > grammarLexer.ml.depends # cached
# Target: grammarParser.mly, tags: { extension:mly, file:grammarParser.mly, ocaml, ocamlyacc, parser, quiet }
/usr/bin/ocamlyacc grammarParser.mly # cached
# Target: grammarParser.mli.depends, tags: { extension:mli, file:grammarParser.mli, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules grammarParser.mli > grammarParser.mli.depends # cached
# Target: grammarParser.cmi, tags: { byte, compile, extension:mli, file:grammarParser.mli, interf, ocaml, quiet }
/usr/bin/ocamlc -c -annot -g -o grammarParser.cmi grammarParser.mli # cached
# Target: grammarLexer.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:grammarLexer.cmo, file:grammarLexer.ml, implem, ocaml, quiet }
/usr/bin/ocamlc -c -annot -g -o grammarLexer.cmo grammarLexer.ml # cached
# Target: grammarParser.ml.depends, tags: { extension:ml, file:grammarParser.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules grammarParser.ml > grammarParser.ml.depends # cached
# Target: grammarParser.cmx, tags: { compile, extension:cmx, extension:ml, file:grammarParser.cmx, file:grammarParser.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt -c -annot -g -o grammarParser.cmx grammarParser.ml # cached
# Target: grammarLexer.cmx, tags: { compile, extension:cmx, extension:ml, file:grammarLexer.cmx, file:grammarLexer.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt -c -annot -g -o grammarLexer.cmx grammarLexer.ml # cached
# Target: grammar.cmx, tags: { compile, extension:cmx, extension:ml, file:grammar.cmx, file:grammar.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt -c -annot -g -o grammar.cmx grammar.ml # cached
# Target: lL1.ml.depends, tags: { extension:ml, file:lL1.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules lL1.ml > lL1.ml.depends
# Target: equation.ml.depends, tags: { extension:ml, file:equation.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules equation.ml > equation.ml.depends # cached
# Target: equation.cmx, tags: { compile, extension:cmx, extension:ml, file:equation.cmx, file:equation.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt -c -annot -g -o equation.cmx equation.ml # cached
# Target: lL1.cmx, tags: { compile, extension:cmx, extension:ml, file:lL1.cmx, file:lL1.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt -c -annot -g -o lL1.cmx lL1.ml
+ /usr/bin/ocamlopt -c -annot -g -o lL1.cmx lL1.ml
File "lL1.ml", line 154, characters 7-10:
Warning 26: unused variable sol.
File "lL1.ml", line 156, characters 7-12:
Warning 26: unused variable prods.
# Target: engine.cmx, tags: { compile, extension:cmx, extension:ml, file:engine.cmx, file:engine.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt -c -annot -g -o engine.cmx engine.ml
# Target: main.cmx, tags: { compile, extension:cmx, extension:ml, file:main.cmx, file:main.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt -c -annot -g -o main.cmx main.ml
# Target: main.native, tags: { dont_link_with, extension:native, file:main.native, link, native, ocaml, program, quiet }
/usr/bin/ocamlopt grammarParser.cmx grammarLexer.cmx grammar.cmx equation.cmx lL1.cmx engine.cmx main.cmx -o main.native
# Compilation successful.
